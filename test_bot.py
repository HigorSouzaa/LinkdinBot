# -*- coding: utf-8 -*-
"""
Script de teste para verificar se o bot est√° funcionando
"""

import sys
import os

# For√ßar UTF-8
if sys.platform == "win32":
    try:
        os.system("chcp 65001 > nul")
        if hasattr(sys.stdout, 'reconfigure'):
            sys.stdout.reconfigure(encoding='utf-8', errors='replace')
    except:
        pass

print("=" * 60)
print("üß™ TESTE DO LINKEDIN BOT")
print("=" * 60)

# Teste 1: Importar m√≥dulos
print("\n1Ô∏è‚É£ Testando importa√ß√£o de m√≥dulos...")
try:
    import config
    import constants
    import utils
    from linkedin import LinkedinBot
    print("‚úÖ Todos os m√≥dulos importados com sucesso!")
except Exception as e:
    print(f"‚ùå Erro ao importar: {e}")
    sys.exit(1)

# Teste 2: Verificar m√©todos da classe
print("\n2Ô∏è‚É£ Testando m√©todos da classe LinkedinBot...")
required_methods = ['startApplying', 'easyApply', 'finish', 'generateUrls', 'start']
missing_methods = []

for method in required_methods:
    if not hasattr(LinkedinBot, method):
        missing_methods.append(method)
        print(f"‚ùå M√©todo '{method}' n√£o encontrado!")
    else:
        print(f"‚úÖ M√©todo '{method}' OK")

if missing_methods:
    print(f"\n‚ùå M√©todos faltando: {missing_methods}")
    sys.exit(1)

# Teste 3: Verificar config
print("\n3Ô∏è‚É£ Testando configura√ß√µes...")
try:
    assert hasattr(config, 'location'), "location n√£o encontrado"
    assert hasattr(config, 'keywords'), "keywords n√£o encontrado"
    assert hasattr(config, 'botSpeed'), "botSpeed n√£o encontrado"
    assert hasattr(config, 'maxApplications'), "maxApplications n√£o encontrado"
    
    print(f"‚úÖ Localiza√ß√µes: {config.location}")
    print(f"‚úÖ Palavras-chave: {config.keywords}")
    print(f"‚úÖ Velocidade: {config.botSpeed}s")
    print(f"‚úÖ Limite: {config.maxApplications}")
except AssertionError as e:
    print(f"‚ùå Configura√ß√£o inv√°lida: {e}")
    sys.exit(1)

# Teste 4: Verificar pasta selenium_profile
print("\n4Ô∏è‚É£ Testando sistema de perfil...")
if os.path.exists("selenium_profile"):
    print("‚úÖ Pasta selenium_profile existe (login salvo)")
else:
    print("‚ö†Ô∏è Pasta selenium_profile n√£o existe (primeira execu√ß√£o)")
    print("   ‚Üí Voc√™ precisar√° fazer login no LinkedIn na primeira vez")

# Teste 5: Verificar encoding
print("\n5Ô∏è‚É£ Testando encoding UTF-8...")
try:
    test_chars = "‚úÖ ‚ùå ‚ö†Ô∏è üöÄ üìä üéØ"
    print(f"Emojis: {test_chars}")
    print("‚úÖ Encoding UTF-8 funcionando!")
except Exception as e:
    print(f"‚ö†Ô∏è Problema com encoding: {e}")

print("\n" + "=" * 60)
print("‚úÖ TODOS OS TESTES PASSARAM!")
print("=" * 60)
print("\nüöÄ O bot est√° pronto para usar!")
print("\nPara executar:")
print("  ‚Ä¢ Interface gr√°fica: python gui_config.py")
print("  ‚Ä¢ Linha de comando: python linkedin.py")
print("\n‚ö†Ô∏è LEMBRE-SE: Na primeira execu√ß√£o, fa√ßa login no LinkedIn")
